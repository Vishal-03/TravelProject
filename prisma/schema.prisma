// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  NONE
  ACTIVE
  INACTIVE
  ADMINACTIVE
}

enum Status {
  NONE
  ACTIVE
  INACTIVE
}

enum Role {
  NONE
  SYSTEM
  ADMIN
  AGENCY
  USER
}

enum TripType {
  NONE
  PRIVATE
  PUBLIC
}

enum TripCategory {
  NONE
  SCHOOL
  COUPLE
  FAMILY
  OFFICE
  FRIENDS
}

enum ShowHome {
  NO
  YES
}

model user {
  id            Int        @id @default(autoincrement())
  avatar        String?
  name          String?
  email         String     @unique
  password      String?
  contact       String?
  secondcontact String?
  agency        agency?    @relation(fields: [agencyId], references: [id])
  agencyId      Int?
  role          Role       @default(NONE)
  address       String?    @db.MediumText
  status        UserStatus @default(ACTIVE)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  deletedAt     DateTime?
  trips         trips[]
}

model trips {
  id               Int             @id @default(autoincrement())
  name             String?
  start            DateTime
  end              DateTime
  image            String?
  price            Int
  trip_type        TripType        @default(NONE)
  category         TripCategory    @default(NONE)
  description      String?         @db.MediumText
  number_of_people Int
  status           Status          @default(ACTIVE)
  createdAt        DateTime        @default(now())
  create           user            @relation(fields: [createdBy], references: [id])
  createdBy        Int
  agency           agency          @relation(fields: [agencyId], references: [id])
  agencyId         Int
  showhome         ShowHome        @default(NO)
  updatedAt        DateTime        @updatedAt
  deletedAt        DateTime?
  trips_images     trips_images[]
  trip_location    trip_location[]
  day_info         day_info[]
  exclusion        exclusion[]
  inclusion        inclusion[]
}

model agency {
  id          Int       @id @default(autoincrement())
  name        String?
  email       String    @unique
  contact     String?
  website     String?
  address     String?   @db.MediumText
  logo        String?
  banner      String?
  description String    @db.LongText
  aadhar      String?
  aadharurl   String?
  pan         String?
  panurl      String?
  status      Status    @default(ACTIVE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  user        user[]
  trips       trips[]
}

model contact {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  contact   String
  message   String    @db.MediumText
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model trips_images {
  id        Int       @id @default(autoincrement())
  image     String
  trip      trips     @relation(fields: [tripId], references: [id])
  tripId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model trip_location {
  id        Int       @id @default(autoincrement())
  location  String
  trip      trips     @relation(fields: [tripId], references: [id])
  tripId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model day_info {
  id          Int       @id @default(autoincrement())
  title       String
  description Json
  trip        trips     @relation(fields: [tripId], references: [id])
  tripId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model exclusion {
  id        Int       @id @default(autoincrement())
  name      String
  trip      trips     @relation(fields: [tripId], references: [id])
  tripId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model inclusion {
  id        Int       @id @default(autoincrement())
  name      String
  trip      trips     @relation(fields: [tripId], references: [id])
  tripId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
